name: Protecci√≥n del N√∫cleo IZA
on:
  push:
    paths:
      - 'nucleo/**'
      - '.github/**'
  pull_request:
    paths:
      - 'nucleo/**'

jobs:
  validar-acceso-nucleo:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v3

      - name: Verificar permisos de usuario
        id: check_permissions
        run: |
          # Verificar si el usuario tiene acceso al n√∫cleo
          USER_PERMISSION=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/collaborators/${{ github.actor }}/permission" | jq -r .permission)
          
          if [[ "$USER_PERMISSION" != "admin" && "$USER_PERMISSION" != "write" ]]; then
            echo "‚ùå Usuario ${{ github.actor }} no tiene permisos para modificar el n√∫cleo"
            exit 1
          fi
          
          # Verificar si es miembro del equipo nuclear
          IS_NUCLEAR_MEMBER=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/orgs/iza-teoria/teams/iza-nucleo-team/memberships/${{ github.actor }}" | jq -r .state)
            
          if [[ "$IS_NUCLEAR_MEMBER" != "active" ]]; then
            echo "‚ùå Usuario ${{ github.actor }} no es miembro del equipo nuclear"
            exit 1
          fi

      - name: Validar cambios en nucleo
        run: |
          # Verificar que los cambios en nucleo/ sean aprobados
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
          NUCLEO_CHANGES=$(echo "$CHANGED_FILES" | grep -c "^nucleo/" || true)
          
          if [ "$NUCLEO_CHANGES" -gt 0 ]; then
            echo "üîí Cambios detectados en el n√∫cleo - Validando..."
            
            # Verificar que el commit tenga al menos 2 aprobaciones
            APPROVALS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/reviews" | \
              jq '[.[] | select(.state == "APPROVED")] | length')
              
            if [ "$APPROVALS" -lt 2 ]; then
              echo "‚ùå Se requieren al menos 2 aprobaciones para cambios en el n√∫cleo"
              exit 1
            fi
          fi

  escanear-seguridad:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v3

      - name: Escanear secrets en el n√∫cleo
        uses: gitleaks/gitleaks-action@v2
        with:
          path: ./nucleo
          config-path: .gitleaks.toml

      - name: Verificar integridad de archivos sensibles
        run: |
          # Lista de archivos cr√≠ticos que deben mantenerse seguros
          CRITICAL_FILES=(
            "nucleo/keygen-aethernet/protocolo-completo.md"
            "nucleo/.acceso/sistema-puntaje.py"
            "nucleo/experimentos-sensibles/datos-crudos/"
          )
          
          for file in "${CRITICAL_FILES[@]}"; do
            if [ -f "$file" ] || [ -d "$file" ]; then
              # Verificar que los archivos cr√≠ticos no sean modificados sin autorizaci√≥n especial
              echo "‚úÖ Archivo cr√≠tico verificado: $file"
            fi
          done
