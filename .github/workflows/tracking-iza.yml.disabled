name: üëÅÔ∏è Tracking IZA - Mapa de Comunidad Optimizado

on:
  push: null
  watch: null
  fork: null
  issues:
    types: [opened, closed, edited, reopened]
  pull_request:
    types: [opened, closed, edited, reopened, review_requested]
  issue_comment:
    types: [created, edited, deleted]
  pull_request_review:
    types: [submitted, edited, dismissed]
  pull_request_review_comment:
    types: [created, edited, deleted]

permissions:
  contents: write

jobs:
  mapear-comunidad:
    runs-on: ubuntu-latest
    steps:
      - name: üîÑ BAJAR C√ìDIGO
        uses: actions/checkout@v3
        
      - name: üîß INSTALAR HERRAMIENTAS
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          
      - name: üìù REGISTRAR INTERACCI√ìN DE MODIFICACI√ìN
        run: |
          USUARIO="${{ github.actor }}"
          EVENTO="${{ github.event_name }}"
          FECHA="$(date)"
          TIMESTAMP="$(date +%s)"
          ACCION="${{ github.event.action || 'N/A' }}"

          echo "üéØ Registrando modificaci√≥n: $USUARIO - $EVENTO ($ACCION)"

          mkdir -p "data/usuarios/$USUARIO"
          mkdir -p "data/analitica"

          case "$EVENTO" in
            "push")
              COMMIT_MSG="${{ github.event.head_commit.message || 'Sin mensaje' }}"
              COMMIT_MSG_ESCAPED=$(echo "$COMMIT_MSG" | jq -R . | sed 's/^"//;s/"$//')
              EXTRAS=",\"tipo\":\"push\",\"commit\":\"$COMMIT_MSG_ESCAPED\",\"modificacion\":true"
              ;;
            "issues")
              TITULO="${{ github.event.issue.title }}"
              ESTADO="${{ github.event.issue.state }}"
              EXTRAS=",\"tipo\":\"issue\",\"titulo\":\"$TITULO\",\"estado\":\"$ESTADO\",\"accion\":\"$ACCION\",\"modificacion\":true"
              ;;
            "pull_request")
              TITULO="${{ github.event.pull_request.title }}"
              ESTADO="${{ github.event.pull_request.state }}"
              EXTRAS=",\"tipo\":\"pr\",\"titulo\":\"$TITULO\",\"estado\":\"$ESTADO\",\"accion\":\"$ACCION\",\"modificacion\":true"
              ;;
            "issue_comment")
              ISSUE_TITULO="${{ github.event.issue.title }}"
              COMENTARIO_LENGTH="${{ github.event.comment.body.length }}"
              EXTRAS=",\"tipo\":\"comentario_issue\",\"issue\":\"$ISSUE_TITULO\",\"longitud_comentario\":$COMENTARIO_LENGTH,\"accion\":\"$ACCION\",\"modificacion\":true"
              ;;
            "pull_request_review")
              PR_TITULO="${{ github.event.pull_request.title }}"
              EXTRAS=",\"tipo\":\"review_pr\",\"pr\":\"$PR_TITULO\",\"accion\":\"$ACCION\",\"modificacion\":true"
              ;;
            "pull_request_review_comment")
              PR_TITULO="${{ github.event.pull_request.title }}"
              COMENTARIO_LENGTH="${{ github.event.comment.body.length }}"
              EXTRAS=",\"tipo\":\"comentario_review\",\"pr\":\"$PR_TITULO\",\"longitud_comentario\":$COMENTARIO_LENGTH,\"accion\":\"$ACCION\",\"modificacion\":true"
              ;;
            *)
              EXTRAS=",\"tipo\":\"$EVENTO\",\"modificacion\":false"
              ;;
          esac

          echo "{\"usuario\":\"$USUARIO\",\"evento\":\"$EVENTO\",\"accion\":\"$ACCION\",\"timestamp\":$TIMESTAMP,\"fecha\":\"$FECHA\"$EXTRAS}" >> "data/analitica/accesos.jsonl"
          echo "{\"evento\":\"$EVENTO\",\"accion\":\"$ACCION\",\"timestamp\":$TIMESTAMP,\"fecha\":\"$FECHA\"$EXTRAS}" >> "data/usuarios/$USUARIO/historial.jsonl"

          echo "‚úÖ Registro de modificaci√≥n completado"
          
      - name: üìä GENERAR ESTAD√çSTICAS AVANZADAS
        run: |
          if [ -f "data/analitica/accesos.jsonl" ]; then
            TOTAL_EVENTOS=$(wc -l < data/analitica/accesos.jsonl)
            USUARIOS_UNICOS=$(jq -r '.usuario' data/analitica/accesos.jsonl | sort | uniq | wc -l)
            MODIFICACIONES=$(jq 'select(.modificacion == true)' data/analitica/accesos.jsonl | wc -l)
            
            jq -r '.evento' data/analitica/accesos.jsonl | sort | uniq -c | sort -nr > data/analitica/top_eventos.txt
            jq -r '.usuario' data/analitica/accesos.jsonl | sort | uniq -c | sort -nr > data/analitica/top_usuarios.txt
            
          else
            TOTAL_EVENTOS=0
            USUARIOS_UNICOS=0
            MODIFICACIONES=0
          fi

          echo "üìä Estad√≠sticas calculadas:"
          echo "   - Total eventos: $TOTAL_EVENTOS"
          echo "   - Modificaciones: $MODIFICACIONES"
          echo "   - Usuarios √∫nicos: $USUARIOS_UNICOS"
          
      - name: üìà ACTUALIZAR DASHBOARD INTERACTIVO
        run: |
          # Configurar variables
          TOTAL_EVENTOS=0
          USUARIOS_UNICOS=0
          MODIFICACIONES=0
          FECHA_ACTUAL=$(date)

          if [ -f "data/analitica/accesos.jsonl" ]; then
            TOTAL_EVENTOS=$(wc -l < data/analitica/accesos.jsonl)
            USUARIOS_UNICOS=$(jq -r '.usuario' data/analitica/accesos.jsonl | sort | uniq | wc -l)
            MODIFICACIONES=$(jq 'select(.modificacion == true)' data/analitica/accesos.jsonl | wc -l)
          fi

          # Crear dashboard de forma simple y directa
          echo "# üìä DASHBOARD IZA - MAPA DE COMUNIDAD" > data/dashboard.md
          echo "" >> data/dashboard.md
          echo "## üìà ESTAD√çSTICAS PRINCIPALES" >> data/dashboard.md
          echo "" >> data/dashboard.md
          echo "- **üë• Usuarios √∫nicos:** $USUARIOS_UNICOS" >> data/dashboard.md
          echo "- **üìä Total interacciones:** $TOTAL_EVENTOS" >> data/dashboard.md
          echo "- **‚úèÔ∏è Modificaciones registradas:** $MODIFICACIONES" >> data/dashboard.md
          echo "- **üìÖ √öltima actualizaci√≥n:** $FECHA_ACTUAL" >> data/dashboard.md
          echo "" >> data/dashboard.md
          echo "## üéØ OBJETIVOS DE COMUNIDAD" >> data/dashboard.md
          echo "" >> data/dashboard.md
          echo "- [ ] 5 usuarios √∫nicos" >> data/dashboard.md
          echo "- [ ] 20 interacciones totales" >> data/dashboard.md
          echo "- [ ] 15 modificaciones registradas" >> data/dashboard.md
          echo "" >> data/dashboard.md
          echo "## üîÑ ACTIVIDAD RECIENTE" >> data/dashboard.md
          echo "" >> data/dashboard.md

          # Agregar tabla de √∫ltimos eventos si existen
          if [ -f "data/analitica/accesos.jsonl" ] && [ $TOTAL_EVENTOS -gt 0 ]; then
            echo "| Fecha | Usuario | Evento | Acci√≥n |" >> data/dashboard.md
            echo "|-------|---------|--------|---------|" >> data/dashboard.md
            tail -5 data/analitica/accesos.jsonl | jq -r '[.fecha, .usuario, .evento, .accion] | @tsv' | while IFS=$'\t' read -r fecha usuario evento accion; do
              echo "| $fecha | $usuario | $evento | $accion |" >> data/dashboard.md
            done
          else
            echo "No hay eventos registrados" >> data/dashboard.md
          fi

          echo "" >> data/dashboard.md
          echo "## üìã TIPOS DE INTERACCI√ìN REGISTRADOS" >> data/dashboard.md
          echo "" >> data/dashboard.md
          echo "- ‚úÖ **Push:** Commits al repositorio" >> data/dashboard.md
          echo "- ‚úÖ **Issues:** Apertura, cierre, edici√≥n" >> data/dashboard.md
          echo "- ‚úÖ **Pull Requests:** Creaci√≥n, revisi√≥n, merge" >> data/dashboard.md
          echo "- ‚úÖ **Comentarios:** En issues y PRs" >> data/dashboard.md
          echo "- ‚úÖ **Reviews:** Revisiones de c√≥digo" >> data/dashboard.md
          echo "" >> data/dashboard.md
          echo "> *Sistema optimizado para registrar modificaciones reales*" >> data/dashboard.md

          echo "‚úÖ Dashboard actualizado con estad√≠sticas avanzadas"
          
      - name: üì§ COMMIT Y PUSH AUTOM√ÅTICO
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add data/
          
          if git diff --staged --quiet; then
            echo "‚ö†Ô∏è No hay cambios para commitear"
          else
            git commit -m "üëÅÔ∏è Tracking: ${{ github.actor }} - ${{ github.event_name }} (${{ github.event.action || 'N/A' }})"
            git push
            echo "‚úÖ Cambios guardados en el repositorio"
          fi
